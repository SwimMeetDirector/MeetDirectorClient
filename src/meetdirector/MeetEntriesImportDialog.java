/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package meetdirector;

import entity.SwimMeetClub;
import java.io.File;
import java.io.FileInputStream;
import java.io.InputStreamReader;
import java.util.Iterator;
import java.util.List;
import javax.xml.bind.JAXBContext;
import javax.xml.bind.JAXBElement;
import javax.xml.bind.Unmarshaller;
import javax.xml.stream.XMLEventReader;
import javax.xml.stream.XMLInputFactory;
import org.usa_swimming.xsdif.ClubEntryType;
import org.usa_swimming.xsdif.MeetEntryFileType;

/**
 *
 * @author nhorman
 */
public class MeetEntriesImportDialog extends javax.swing.JDialog {

    private static MeetEntriesImportDialog myself = null;
    
    /**
     * Creates new form MeetImportDialog
     */
    public MeetEntriesImportDialog(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        DismissButton = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        ImportResultsText = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Meet Import Progress");
        jLabel1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        DismissButton.setText("Dismiss");
        DismissButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DismissButtonActionPerformed(evt);
            }
        });

        ImportResultsText.setEditable(false);
        ImportResultsText.setColumns(20);
        ImportResultsText.setRows(5);
        jScrollPane1.setViewportView(ImportResultsText);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(241, 241, 241)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 319, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(265, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(DismissButton)
                .addGap(352, 352, 352))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                    .addContainerGap(80, Short.MAX_VALUE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 681, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(64, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 450, Short.MAX_VALUE)
                .addComponent(DismissButton)
                .addGap(36, 36, 36))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                    .addContainerGap(47, Short.MAX_VALUE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 394, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(97, Short.MAX_VALUE)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void DismissButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DismissButtonActionPerformed
        this.dispose();        // TODO add your handling code here:
    }//GEN-LAST:event_DismissButtonActionPerformed

    protected void importMeetEntry(MeetEntryFileType meet) {
        List<ClubEntryType> clubs;
        // Start by getting the clubs in this meet and adding any
        // That aren't already in the database
        clubs = meet.getClubs().getClub();
        Iterator<ClubEntryType> iterator = clubs.iterator();
        
        while (iterator.hasNext()) {
            ClubEntryType club = iterator.next();
            SwimMeetClub DbClub = SwimMeetClub.GetClub(club.getLSCCode(), club.getClubCode());
            if (DbClub == null) {
                DbClub = new SwimMeetClub(club);
            } else {
                    this.ImportResultsText.append("Found Existing swim club " + DbClub.getClubCode() + " ...skipping add");
            }
        }
    }
    /**
     * @param args the command line arguments
     */
    public void ImportMeetEntries(File file) {
        /* Set the Nimbus look and feel */
        MeetEntryFileType meetEntry = null;
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MeetEntriesImportDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MeetEntriesImportDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MeetEntriesImportDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MeetEntriesImportDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        /* Create and display the dialog */
        try {
            
            JAXBContext context = JAXBContext.newInstance(MeetEntryFileType.class);
            Unmarshaller u = context.createUnmarshaller();
            InputStreamReader in = new InputStreamReader(new FileInputStream(file));
            XMLEventReader xer = XMLInputFactory.newInstance().createXMLEventReader(in);
            JAXBElement <MeetEntryFileType> meetEntryElement = u.unmarshal(xer, MeetEntryFileType.class);
            meetEntry = meetEntryElement.getValue();
            
        } catch (Exception e) {
            e.printStackTrace();
            this.ImportResultsText.append("Unable to find meet entry information in file");
            this.DismissButton.setEnabled(true);
            return;
        }
        //Now We need to start importing objects from the file
        this.importMeetEntry(meetEntry);
        this.DismissButton.setEnabled(true);
            
    }
    
    public static void UpdateLog(String msg) {
        if (myself != null)
            myself.ImportResultsText.append(msg + "\n");
    }
    
    public void OpenWindow() {
        if (myself != null)
            return;
        myself = this;
        this.DismissButton.setEnabled(false);
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                
                myself.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        return;
                    }
                });
                myself.setVisible(true);
                myself = null;
            }
        });
    }
        
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton DismissButton;
    private javax.swing.JTextArea ImportResultsText;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
